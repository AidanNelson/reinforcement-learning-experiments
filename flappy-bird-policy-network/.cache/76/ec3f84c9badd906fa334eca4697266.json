{"id":"node_modules/vega-transforms/src/Compare.js","dependencies":[{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/package.json","includedInParent":true,"mtime":1552668533660},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/.babelrc","includedInParent":true,"mtime":1550250231081},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/node_modules/vega-transforms/package.json","includedInParent":true,"mtime":1550250389656},{"name":"vega-dataflow","loc":{"line":1,"column":23},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/node_modules/vega-transforms/src/Compare.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/node_modules/vega-dataflow/index.js"},{"name":"vega-util","loc":{"line":2,"column":32},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/node_modules/vega-transforms/src/Compare.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/node_modules/vega-util/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Compare;\n\nvar _vegaDataflow = require(\"vega-dataflow\");\n\nvar _vegaUtil = require(\"vega-util\");\n\n/**\n * Generates a comparator function.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<string>} params.fields - The fields to compare.\n * @param {Array<string>} [params.orders] - The sort orders.\n *   Each entry should be one of \"ascending\" (default) or \"descending\".\n */\nfunction Compare(params) {\n  _vegaDataflow.Operator.call(this, null, update, params);\n}\n\n(0, _vegaUtil.inherits)(Compare, _vegaDataflow.Operator);\n\nfunction update(_) {\n  return this.value && !_.modified() ? this.value : (0, _vegaUtil.compare)(_.fields, _.orders);\n}","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":4,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":12,"column":15}},{"name":"Compare","generated":{"line":20,"column":9},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":12,"column":24}},{"generated":{"line":20,"column":16},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":12,"column":15}},{"name":"params","generated":{"line":20,"column":17},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":12,"column":32}},{"generated":{"line":20,"column":23},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":12,"column":15}},{"generated":{"line":20,"column":25},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":12,"column":40}},{"name":"Operator","generated":{"line":21,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":2}},{"name":"call","generated":{"line":21,"column":25},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":11}},{"generated":{"line":21,"column":29},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":2}},{"generated":{"line":21,"column":30},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":16}},{"generated":{"line":21,"column":34},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":2}},{"generated":{"line":21,"column":36},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":22}},{"generated":{"line":21,"column":40},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":2}},{"name":"update","generated":{"line":21,"column":42},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":28}},{"generated":{"line":21,"column":48},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":2}},{"name":"params","generated":{"line":21,"column":50},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":36}},{"generated":{"line":21,"column":56},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":13,"column":2}},{"generated":{"line":22,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":14,"column":1}},{"generated":{"line":24,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":16,"column":0}},{"name":"Compare","generated":{"line":24,"column":24},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":16,"column":9}},{"generated":{"line":24,"column":31},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":16,"column":0}},{"name":"Operator","generated":{"line":24,"column":33},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":16,"column":18}},{"generated":{"line":24,"column":55},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":16,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":18,"column":0}},{"name":"update","generated":{"line":26,"column":9},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":18,"column":9}},{"generated":{"line":26,"column":15},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":18,"column":0}},{"name":"_","generated":{"line":26,"column":16},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":18,"column":16}},{"generated":{"line":26,"column":17},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":19},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":18,"column":19}},{"generated":{"line":27,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":2}},{"generated":{"line":27,"column":9},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":10}},{"name":"value","generated":{"line":27,"column":14},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":15}},{"generated":{"line":27,"column":19},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":10}},{"generated":{"line":27,"column":23},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":24}},{"name":"_","generated":{"line":27,"column":24},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":25}},{"generated":{"line":27,"column":25},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":26}},{"name":"modified","generated":{"line":27,"column":26},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":27}},{"generated":{"line":27,"column":34},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":25}},{"generated":{"line":27,"column":36},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":9}},{"generated":{"line":27,"column":39},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":20,"column":6}},{"name":"value","generated":{"line":27,"column":44},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":20,"column":11}},{"generated":{"line":27,"column":49},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":9}},{"generated":{"line":27,"column":52},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":21,"column":6}},{"name":"_","generated":{"line":27,"column":75},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":21,"column":14}},{"generated":{"line":27,"column":76},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":21,"column":15}},{"name":"fields","generated":{"line":27,"column":77},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":21,"column":16}},{"generated":{"line":27,"column":83},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":21,"column":6}},{"name":"_","generated":{"line":27,"column":85},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":21,"column":24}},{"generated":{"line":27,"column":86},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":21,"column":25}},{"name":"orders","generated":{"line":27,"column":87},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":21,"column":26}},{"generated":{"line":27,"column":93},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":21,"column":6}},{"generated":{"line":27,"column":94},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":19,"column":2}},{"generated":{"line":28,"column":0},"source":"node_modules/vega-transforms/src/Compare.js","original":{"line":22,"column":1}}],"sources":{"node_modules/vega-transforms/src/Compare.js":"import {Operator} from 'vega-dataflow';\nimport {inherits, compare} from 'vega-util';\n\n/**\n * Generates a comparator function.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<string>} params.fields - The fields to compare.\n * @param {Array<string>} [params.orders] - The sort orders.\n *   Each entry should be one of \"ascending\" (default) or \"descending\".\n */\nexport default function Compare(params) {\n  Operator.call(this, null, update, params);\n}\n\ninherits(Compare, Operator);\n\nfunction update(_) {\n  return (this.value && !_.modified())\n    ? this.value\n    : compare(_.fields, _.orders);\n}\n"},"lineCount":null}},"hash":"223d8cafa78e1ba4a002eb9b95a32a04","cacheData":{"env":{}}}