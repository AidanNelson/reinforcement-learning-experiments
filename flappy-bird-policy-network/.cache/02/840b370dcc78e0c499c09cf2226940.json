{"id":"node_modules/inline-style-prefixer/static/plugins/gradient.js","dependencies":[{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/package.json","includedInParent":true,"mtime":1552694917851},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/.babelrc","includedInParent":true,"mtime":1550250231081},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/inline-style-prefixer/package.json","includedInParent":true,"mtime":1550250389047},{"name":"css-in-js-utils/lib/isPrefixedValue","loc":{"line":8,"column":31},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/inline-style-prefixer/static/plugins/gradient.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/css-in-js-utils/lib/isPrefixedValue.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gradient;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixes = ['-webkit-', '-moz-', ''];\n\nvar values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;\n\nfunction gradient(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && values.test(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports['default'];","map":{"mappings":[{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/inline-style-prefixer/static/plugins/gradient.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"node_modules/inline-style-prefixer/static/plugins/gradient.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gradient;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixes = ['-webkit-', '-moz-', ''];\n\nvar values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;\n\nfunction gradient(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && values.test(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports['default'];"},"lineCount":25}},"hash":"aab785fd928de4897a62d0e6ca9152c8","cacheData":{"env":{}}}