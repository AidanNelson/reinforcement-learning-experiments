{"id":"node_modules/lodash/merge.js","dependencies":[{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/package.json","includedInParent":true,"mtime":1552694917851},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/.babelrc","includedInParent":true,"mtime":1550250231081},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/package.json","includedInParent":true,"mtime":1550250389191},{"name":"./_baseMerge","loc":{"line":1,"column":24},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/merge.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/_baseMerge.js"},{"name":"./_createAssigner","loc":{"line":2,"column":29},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/merge.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/_createAssigner.js"}],"generated":{"js":"var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","map":{"mappings":[{"source":"node_modules/lodash/merge.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/lodash/merge.js":"var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n"},"lineCount":40}},"hash":"f84fc799cf443a8bf666fa85f82f0d6c","cacheData":{"env":{}}}