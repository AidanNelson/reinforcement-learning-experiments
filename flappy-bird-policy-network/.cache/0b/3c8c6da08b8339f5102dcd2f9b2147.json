{"id":"node_modules/@tensorflow/tfjs-vis/dist/render/histogram.js","dependencies":[{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/dist/render/histogram.js.map","includedInParent":true,"mtime":1550250388843},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/package.json","includedInParent":true,"mtime":1552694917851},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/.babelrc","includedInParent":true,"mtime":1550250231081},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/package.json","includedInParent":true,"mtime":1550250388843},{"name":"d3-format","loc":{"line":14,"column":28},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/dist/render/histogram.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/d3-format/src/index.js"},{"name":"vega-embed","loc":{"line":15,"column":45},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/dist/render/histogram.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/vega-embed/build/src/embed.js"},{"name":"../util/dom","loc":{"line":16,"column":22},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/dist/render/histogram.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/dist/util/dom.js"},{"name":"../util/math","loc":{"line":17,"column":23},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/dist/render/histogram.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/dist/util/math.js"},{"name":"./table","loc":{"line":18,"column":24},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/dist/render/histogram.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/@tensorflow/tfjs-vis/dist/render/table.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst d3_format_1 = require(\"d3-format\");\nconst vega_embed_1 = __importDefault(require(\"vega-embed\"));\nconst dom_1 = require(\"../util/dom\");\nconst math_1 = require(\"../util/math\");\nconst table_1 = require(\"./table\");\nconst defaultOpts = {\n    maxBins: 12,\n    fontSize: 11,\n};\nfunction renderHistogram(data, container, opts = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const values = prepareData(data);\n        const options = Object.assign({}, defaultOpts, opts);\n        const embedOpts = {\n            actions: false,\n            mode: 'vega-lite',\n            defaultStyle: false,\n        };\n        const histogramContainer = dom_1.subSurface(container, 'histogram');\n        if (opts.stats !== false) {\n            const statsContainer = dom_1.subSurface(container, 'stats', {\n                prepend: true,\n            });\n            let stats;\n            if (opts.stats) {\n                stats = opts.stats;\n            }\n            else {\n                stats = math_1.arrayStats(values.map(x => x.value));\n            }\n            renderStats(stats, statsContainer, { fontSize: options.fontSize });\n        }\n        const filtered = [];\n        for (let i = 0; i < values.length; i++) {\n            const val = values[i].value;\n            if (val != null && isFinite(val)) {\n                filtered.push(values[i]);\n            }\n        }\n        const histogramSpec = {\n            'width': options.width || histogramContainer.clientWidth,\n            'height': options.height || histogramContainer.clientHeight,\n            'padding': 5,\n            'autosize': {\n                'type': 'fit',\n                'contains': 'padding',\n                'resize': true,\n            },\n            'data': { 'values': filtered },\n            'mark': 'bar',\n            'config': {\n                'axis': {\n                    'labelFontSize': options.fontSize,\n                    'titleFontSize': options.fontSize,\n                },\n                'text': { 'fontSize': options.fontSize },\n                'legend': {\n                    'labelFontSize': options.fontSize,\n                    'titleFontSize': options.fontSize,\n                }\n            },\n            'encoding': {\n                'x': {\n                    'bin': { 'maxbins': options.maxBins },\n                    'field': 'value',\n                    'type': 'quantitative',\n                },\n                'y': {\n                    'aggregate': 'count',\n                    'type': 'quantitative',\n                },\n                'color': {\n                    'value': '#001B44',\n                }\n            }\n        };\n        return vega_embed_1.default(histogramContainer, histogramSpec, embedOpts);\n    });\n}\nexports.renderHistogram = renderHistogram;\nfunction renderStats(stats, container, opts) {\n    const format = d3_format_1.format(',.4~f');\n    const pctFormat = d3_format_1.format('.4~p');\n    const headers = [];\n    const vals = [];\n    if (stats.numVals != null) {\n        headers.push('Num Vals');\n        vals.push(format(stats.numVals));\n    }\n    if (stats.min != null) {\n        headers.push('Min');\n        vals.push(format(stats.min));\n    }\n    if (stats.max != null) {\n        headers.push('Max');\n        vals.push(format(stats.max));\n    }\n    if (stats.numZeros != null) {\n        headers.push('# Zeros');\n        let zeroPct = '';\n        if (stats.numVals) {\n            zeroPct = stats.numZeros > 0 ?\n                `(${pctFormat(stats.numZeros / stats.numVals)})` :\n                '';\n        }\n        vals.push(`${format(stats.numZeros)} ${zeroPct}`);\n    }\n    if (stats.numNans != null) {\n        headers.push('# NaNs');\n        let nanPct = '';\n        if (stats.numVals) {\n            nanPct = stats.numNans > 0 ?\n                `(${pctFormat(stats.numNans / stats.numVals)})` :\n                '';\n        }\n        vals.push(`${format(stats.numNans)} ${nanPct}`);\n    }\n    if (stats.numInfs != null) {\n        headers.push('# Infinity');\n        let infPct = '';\n        if (stats.numVals) {\n            infPct = stats.numInfs > 0 ?\n                `(${pctFormat(stats.numInfs / stats.numVals)})` :\n                '';\n        }\n        vals.push(`${format(stats.numInfs)} ${infPct}`);\n    }\n    table_1.renderTable({ headers, values: [vals] }, container, opts);\n}\nfunction prepareData(data) {\n    if (data.length == null) {\n        throw new Error('input data must be an array');\n    }\n    if (data.length === 0) {\n        return [];\n    }\n    else if (typeof data[0] === 'object') {\n        if (data[0].value == null) {\n            throw new Error('input data must have a value field');\n        }\n        else {\n            return data;\n        }\n    }\n    else {\n        const ret = Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            ret[i] = { value: data[i] };\n        }\n        return ret;\n    }\n}\n","map":{"version":3,"file":"histogram.js","sourceRoot":"","sources":["../../src/render/histogram.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"hash":"5b4cc15a3dae716b303ac3a43c2994a5","cacheData":{"env":{}}}