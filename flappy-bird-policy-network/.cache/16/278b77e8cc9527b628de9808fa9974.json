{"id":"node_modules/json-stringify-pretty-compact/index.js","dependencies":[{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/package.json","includedInParent":true,"mtime":1552668533660},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/.babelrc","includedInParent":true,"mtime":1550250231081},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/node_modules/json-stringify-pretty-compact/package.json","includedInParent":true,"mtime":1550250389244}],"generated":{"js":"function stringify (obj, options) {\n  options = options || {}\n  var indent = JSON.stringify([1], null, get(options, 'indent', 2)).slice(2, -3)\n  var addMargin = get(options, 'margins', false)\n  var maxLength = (indent === '' ? Infinity : get(options, 'maxLength', 80))\n\n  return (function _stringify (obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === 'function') {\n      obj = obj.toJSON()\n    }\n\n    var string = JSON.stringify(obj)\n\n    if (string === undefined) {\n      return string\n    }\n\n    var length = maxLength - currentIndent.length - reserved\n\n    if (string.length <= length) {\n      var prettified = prettify(string, addMargin)\n      if (prettified.length <= length) {\n        return prettified\n      }\n    }\n\n    if (typeof obj === 'object' && obj !== null) {\n      var nextIndent = currentIndent + indent\n      var items = []\n      var delimiters\n      var comma = function (array, index) {\n        return (index === array.length - 1 ? 0 : 1)\n      }\n\n      if (Array.isArray(obj)) {\n        for (var index = 0; index < obj.length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, comma(obj, index)) || 'null'\n          )\n        }\n        delimiters = '[]'\n      } else {\n        Object.keys(obj).forEach(function (key, index, array) {\n          var keyPart = JSON.stringify(key) + ': '\n          var value = _stringify(obj[key], nextIndent,\n                                 keyPart.length + comma(array, index))\n          if (value !== undefined) {\n            items.push(keyPart + value)\n          }\n        })\n        delimiters = '{}'\n      }\n\n      if (items.length > 0) {\n        return [\n          delimiters[0],\n          indent + items.join(',\\n' + nextIndent),\n          delimiters[1]\n        ].join('\\n' + currentIndent)\n      }\n    }\n\n    return string\n  }(obj, '', 0))\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nvar stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,\\][}{]/g\n\nfunction prettify (string, addMargin) {\n  var m = addMargin ? ' ' : ''\n  var tokens = {\n    '{': '{' + m,\n    '[': '[' + m,\n    '}': m + '}',\n    ']': m + ']',\n    ',': ', ',\n    ':': ': '\n  }\n  return string.replace(stringOrChar, function (match, string) {\n    return string ? match : tokens[match]\n  })\n}\n\nfunction get (options, name, defaultValue) {\n  return (name in options ? options[name] : defaultValue)\n}\n\nmodule.exports = stringify\n","map":{"mappings":[{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/json-stringify-pretty-compact/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}}],"sources":{"node_modules/json-stringify-pretty-compact/index.js":"function stringify (obj, options) {\n  options = options || {}\n  var indent = JSON.stringify([1], null, get(options, 'indent', 2)).slice(2, -3)\n  var addMargin = get(options, 'margins', false)\n  var maxLength = (indent === '' ? Infinity : get(options, 'maxLength', 80))\n\n  return (function _stringify (obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === 'function') {\n      obj = obj.toJSON()\n    }\n\n    var string = JSON.stringify(obj)\n\n    if (string === undefined) {\n      return string\n    }\n\n    var length = maxLength - currentIndent.length - reserved\n\n    if (string.length <= length) {\n      var prettified = prettify(string, addMargin)\n      if (prettified.length <= length) {\n        return prettified\n      }\n    }\n\n    if (typeof obj === 'object' && obj !== null) {\n      var nextIndent = currentIndent + indent\n      var items = []\n      var delimiters\n      var comma = function (array, index) {\n        return (index === array.length - 1 ? 0 : 1)\n      }\n\n      if (Array.isArray(obj)) {\n        for (var index = 0; index < obj.length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, comma(obj, index)) || 'null'\n          )\n        }\n        delimiters = '[]'\n      } else {\n        Object.keys(obj).forEach(function (key, index, array) {\n          var keyPart = JSON.stringify(key) + ': '\n          var value = _stringify(obj[key], nextIndent,\n                                 keyPart.length + comma(array, index))\n          if (value !== undefined) {\n            items.push(keyPart + value)\n          }\n        })\n        delimiters = '{}'\n      }\n\n      if (items.length > 0) {\n        return [\n          delimiters[0],\n          indent + items.join(',\\n' + nextIndent),\n          delimiters[1]\n        ].join('\\n' + currentIndent)\n      }\n    }\n\n    return string\n  }(obj, '', 0))\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nvar stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,\\][}{]/g\n\nfunction prettify (string, addMargin) {\n  var m = addMargin ? ' ' : ''\n  var tokens = {\n    '{': '{' + m,\n    '[': '[' + m,\n    '}': m + '}',\n    ']': m + ']',\n    ',': ', ',\n    ':': ': '\n  }\n  return string.replace(stringOrChar, function (match, string) {\n    return string ? match : tokens[match]\n  })\n}\n\nfunction get (options, name, defaultValue) {\n  return (name in options ? options[name] : defaultValue)\n}\n\nmodule.exports = stringify\n"},"lineCount":93}},"hash":"0e1d2a21b2b7924484384aa01de1371e","cacheData":{"env":{}}}