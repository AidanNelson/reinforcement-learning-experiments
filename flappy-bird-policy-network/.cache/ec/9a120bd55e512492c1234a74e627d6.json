{"id":"node_modules/glamor-tachyons/lib/reset.js","dependencies":[{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/package.json","includedInParent":true,"mtime":1552668533660},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/.babelrc","includedInParent":true,"mtime":1550250231081},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/node_modules/glamor-tachyons/package.json","includedInParent":true,"mtime":1550250388910},{"name":"../tachyons/reset","loc":{"line":3,"column":20},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/node_modules/glamor-tachyons/lib/reset.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/tfjs-examples/cart-pole/node_modules/glamor-tachyons/tachyons/reset.js"}],"generated":{"js":"'use strict'\n\nvar reset = require('../tachyons/reset')\n\n// TODO: glamor/reset has an out of date normalize version compared to Tachyons,\n// so we need to add it to the global\nmodule.exports = function (glamor) {\n  reset.forEach(function (rule) {\n    glamor.insertRule(rule)\n  })\n}\n","map":{"mappings":[{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/glamor-tachyons/lib/reset.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}}],"sources":{"node_modules/glamor-tachyons/lib/reset.js":"'use strict'\n\nvar reset = require('../tachyons/reset')\n\n// TODO: glamor/reset has an out of date normalize version compared to Tachyons,\n// so we need to add it to the global\nmodule.exports = function (glamor) {\n  reset.forEach(function (rule) {\n    glamor.insertRule(rule)\n  })\n}\n"},"lineCount":12}},"hash":"ed0ddaa103fb8bd0d13a3f36d6fe9850","cacheData":{"env":{}}}