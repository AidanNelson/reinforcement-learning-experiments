{"id":"node_modules/lodash/_assignMergeValue.js","dependencies":[{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/package.json","includedInParent":true,"mtime":1552694917851},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/.babelrc","includedInParent":true,"mtime":1550250231081},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/package.json","includedInParent":true,"mtime":1550250389191},{"name":"./_baseAssignValue","loc":{"line":1,"column":30},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/_assignMergeValue.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/_baseAssignValue.js"},{"name":"./eq","loc":{"line":2,"column":17},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/_assignMergeValue.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/lodash/eq.js"}],"generated":{"js":"var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","map":{"mappings":[{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_assignMergeValue.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"node_modules/lodash/_assignMergeValue.js":"var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n"},"lineCount":21}},"hash":"67d91e28d424abc6b13f21ab0e71d241","cacheData":{"env":{}}}