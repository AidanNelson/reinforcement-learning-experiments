{"id":"node_modules/vega-lite/build/src/bin.js","dependencies":[{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/vega-lite/build/src/bin.js.map","includedInParent":true,"mtime":1550250389035},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/package.json","includedInParent":true,"mtime":1552694917851},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/.babelrc","includedInParent":true,"mtime":1550250231081},{"name":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":1550250389035},{"name":"vega-util","loc":{"line":1,"column":36},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/vega-lite/build/src/bin.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/vega-util/index.js"},{"name":"./channel","loc":{"line":2,"column":112},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/vega-lite/build/src/bin.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/vega-lite/build/src/channel.js"},{"name":"./util","loc":{"line":3,"column":30},"parent":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/vega-lite/build/src/bin.js","resolved":"/Users/aidannelson/projects/machine-learning/ml5js/reinforcement-learning/experiments/cart-pole-aidan/node_modules/vega-lite/build/src/util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.binToString = binToString;\nexports.isBinning = isBinning;\nexports.isBinned = isBinned;\nexports.isBinParams = isBinParams;\nexports.autoMaxBins = autoMaxBins;\n\nvar _vegaUtil = require(\"vega-util\");\n\nvar _channel = require(\"./channel\");\n\nvar _util = require(\"./util\");\n\nfunction binToString(bin) {\n  if ((0, _vegaUtil.isBoolean)(bin)) {\n    return 'bin';\n  }\n\n  return 'bin' + (0, _util.keys)(bin).map(function (p) {\n    return (0, _util.varName)(\"_\" + p + \"_\" + bin[p]);\n  }).join('');\n}\n\nfunction isBinning(bin) {\n  return bin === true || isBinParams(bin);\n}\n\nfunction isBinned(bin) {\n  return bin === 'binned';\n}\n\nfunction isBinParams(bin) {\n  return (0, _vegaUtil.isObject)(bin);\n}\n\nfunction autoMaxBins(channel) {\n  switch (channel) {\n    case _channel.ROW:\n    case _channel.COLUMN:\n    case _channel.SIZE:\n    case _channel.COLOR:\n    case _channel.FILL:\n    case _channel.STROKE:\n    case _channel.STROKEWIDTH:\n    case _channel.OPACITY:\n    case _channel.FILLOPACITY:\n    case _channel.STROKEOPACITY: // Facets and Size shouldn't have too many bins\n    // We choose 6 like shape to simplify the rule\n\n    case _channel.SHAPE:\n      return 6;\n    // Vega's \"shape\" has 6 distinct values\n\n    default:\n      return 10;\n  }\n}","map":{"mappings":[{"source":"../../src/bin.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":16,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":82,"column":6},"generated":{"line":18,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":82,"column":16},"generated":{"line":18,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":82,"column":6},"generated":{"line":18,"column":20}},{"source":"../../src/bin.ts","name":null,"original":{"line":82,"column":28},"generated":{"line":18,"column":21}},{"source":"../../src/bin.ts","name":null,"original":{"line":82,"column":6},"generated":{"line":18,"column":24}},{"source":"../../src/bin.ts","name":null,"original":{"line":82,"column":52},"generated":{"line":18,"column":26}},{"source":"../../src/bin.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":19,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":19,"column":6}},{"source":"../../src/bin.ts","name":null,"original":{"line":83,"column":16},"generated":{"line":19,"column":31}},{"source":"../../src/bin.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":19,"column":34}},{"source":"../../src/bin.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":19,"column":35}},{"source":"../../src/bin.ts","name":null,"original":{"line":83,"column":22},"generated":{"line":19,"column":37}},{"source":"../../src/bin.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":20,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":84,"column":11},"generated":{"line":20,"column":11}},{"source":"../../src/bin.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":20,"column":16}},{"source":"../../src/bin.ts","name":null,"original":{"line":85,"column":3},"generated":{"line":21,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":23,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":23,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":23,"column":17}},{"source":"../../src/bin.ts","name":null,"original":{"line":88,"column":9},"generated":{"line":23,"column":33}},{"source":"../../src/bin.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":23,"column":36}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":7},"generated":{"line":23,"column":38}},{"source":"../../src/bin.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":23,"column":41}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":11},"generated":{"line":23,"column":42}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":11},"generated":{"line":23,"column":52}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":11},"generated":{"line":23,"column":53}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":12},"generated":{"line":23,"column":55}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":16},"generated":{"line":24,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":16},"generated":{"line":24,"column":11}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":24},"generated":{"line":24,"column":30}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":28},"generated":{"line":24,"column":36}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":24},"generated":{"line":24,"column":37}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":29},"generated":{"line":24,"column":40}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":24},"generated":{"line":24,"column":43}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":33},"generated":{"line":24,"column":46}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":36},"generated":{"line":24,"column":49}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":37},"generated":{"line":24,"column":50}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":36},"generated":{"line":24,"column":51}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":16},"generated":{"line":24,"column":52}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":16},"generated":{"line":24,"column":53}},{"source":"../../src/bin.ts","name":null,"original":{"line":89,"column":42},"generated":{"line":25,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":25,"column":3}},{"source":"../../src/bin.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":25,"column":5}},{"source":"../../src/bin.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":25,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":90,"column":12},"generated":{"line":25,"column":10}},{"source":"../../src/bin.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":25,"column":12}},{"source":"../../src/bin.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":25,"column":13}},{"source":"../../src/bin.ts","name":null,"original":{"line":92,"column":1},"generated":{"line":26,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":28,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":94,"column":16},"generated":{"line":28,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":28,"column":18}},{"source":"../../src/bin.ts","name":null,"original":{"line":94,"column":26},"generated":{"line":28,"column":19}},{"source":"../../src/bin.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":28,"column":22}},{"source":"../../src/bin.ts","name":null,"original":{"line":94,"column":61},"generated":{"line":28,"column":24}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":2},"generated":{"line":29,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":9},"generated":{"line":29,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":12},"generated":{"line":29,"column":12}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":17},"generated":{"line":29,"column":17}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":9},"generated":{"line":29,"column":21}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":25},"generated":{"line":29,"column":25}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":29,"column":36}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":37},"generated":{"line":29,"column":37}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":29,"column":40}},{"source":"../../src/bin.ts","name":null,"original":{"line":95,"column":2},"generated":{"line":29,"column":41}},{"source":"../../src/bin.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":30,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":98,"column":6},"generated":{"line":32,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":98,"column":16},"generated":{"line":32,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":98,"column":6},"generated":{"line":32,"column":17}},{"source":"../../src/bin.ts","name":null,"original":{"line":98,"column":25},"generated":{"line":32,"column":18}},{"source":"../../src/bin.ts","name":null,"original":{"line":98,"column":6},"generated":{"line":32,"column":21}},{"source":"../../src/bin.ts","name":null,"original":{"line":98,"column":60},"generated":{"line":32,"column":23}},{"source":"../../src/bin.ts","name":null,"original":{"line":99,"column":2},"generated":{"line":33,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":99,"column":9},"generated":{"line":33,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":99,"column":12},"generated":{"line":33,"column":12}},{"source":"../../src/bin.ts","name":null,"original":{"line":99,"column":17},"generated":{"line":33,"column":17}},{"source":"../../src/bin.ts","name":null,"original":{"line":99,"column":2},"generated":{"line":33,"column":25}},{"source":"../../src/bin.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":34,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":102,"column":6},"generated":{"line":36,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":102,"column":16},"generated":{"line":36,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":102,"column":6},"generated":{"line":36,"column":20}},{"source":"../../src/bin.ts","name":null,"original":{"line":102,"column":28},"generated":{"line":36,"column":21}},{"source":"../../src/bin.ts","name":null,"original":{"line":102,"column":6},"generated":{"line":36,"column":24}},{"source":"../../src/bin.ts","name":null,"original":{"line":102,"column":63},"generated":{"line":36,"column":26}},{"source":"../../src/bin.ts","name":null,"original":{"line":103,"column":2},"generated":{"line":37,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":103,"column":9},"generated":{"line":37,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":103,"column":18},"generated":{"line":37,"column":33}},{"source":"../../src/bin.ts","name":null,"original":{"line":103,"column":9},"generated":{"line":37,"column":36}},{"source":"../../src/bin.ts","name":null,"original":{"line":103,"column":2},"generated":{"line":37,"column":37}},{"source":"../../src/bin.ts","name":null,"original":{"line":104,"column":1},"generated":{"line":38,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":106,"column":6},"generated":{"line":40,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":106,"column":16},"generated":{"line":40,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":106,"column":6},"generated":{"line":40,"column":20}},{"source":"../../src/bin.ts","name":null,"original":{"line":106,"column":28},"generated":{"line":40,"column":21}},{"source":"../../src/bin.ts","name":null,"original":{"line":106,"column":6},"generated":{"line":40,"column":28}},{"source":"../../src/bin.ts","name":null,"original":{"line":106,"column":44},"generated":{"line":40,"column":30}},{"source":"../../src/bin.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":41,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":107,"column":10},"generated":{"line":41,"column":10}},{"source":"../../src/bin.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":41,"column":17}},{"source":"../../src/bin.ts","name":null,"original":{"line":108,"column":4},"generated":{"line":42,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":108,"column":9},"generated":{"line":42,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":108,"column":4},"generated":{"line":42,"column":21}},{"source":"../../src/bin.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":43,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":109,"column":9},"generated":{"line":43,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":43,"column":24}},{"source":"../../src/bin.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":44,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":110,"column":9},"generated":{"line":44,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":44,"column":22}},{"source":"../../src/bin.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":45,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":111,"column":9},"generated":{"line":45,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":45,"column":23}},{"source":"../../src/bin.ts","name":null,"original":{"line":112,"column":4},"generated":{"line":46,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":46,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":112,"column":4},"generated":{"line":46,"column":22}},{"source":"../../src/bin.ts","name":null,"original":{"line":113,"column":4},"generated":{"line":47,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":113,"column":9},"generated":{"line":47,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":113,"column":4},"generated":{"line":47,"column":24}},{"source":"../../src/bin.ts","name":null,"original":{"line":114,"column":4},"generated":{"line":48,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":114,"column":9},"generated":{"line":48,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":114,"column":4},"generated":{"line":48,"column":29}},{"source":"../../src/bin.ts","name":null,"original":{"line":115,"column":4},"generated":{"line":49,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":115,"column":9},"generated":{"line":49,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":115,"column":4},"generated":{"line":49,"column":25}},{"source":"../../src/bin.ts","name":null,"original":{"line":116,"column":4},"generated":{"line":50,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":116,"column":9},"generated":{"line":50,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":116,"column":4},"generated":{"line":50,"column":29}},{"source":"../../src/bin.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":51,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":117,"column":9},"generated":{"line":51,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":51,"column":31}},{"source":"../../src/bin.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":51,"column":32}},{"source":"../../src/bin.ts","name":null,"original":{"line":118,"column":4},"generated":{"line":51,"column":33}},{"source":"../../src/bin.ts","name":null,"original":{"line":119,"column":4},"generated":{"line":52,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":120,"column":4},"generated":{"line":54,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":120,"column":9},"generated":{"line":54,"column":9}},{"source":"../../src/bin.ts","name":null,"original":{"line":120,"column":4},"generated":{"line":54,"column":23}},{"source":"../../src/bin.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":55,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":121,"column":13},"generated":{"line":55,"column":13}},{"source":"../../src/bin.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":55,"column":14}},{"source":"../../src/bin.ts","name":null,"original":{"line":121,"column":16},"generated":{"line":56,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":122,"column":4},"generated":{"line":58,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":123,"column":6},"generated":{"line":59,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":123,"column":13},"generated":{"line":59,"column":13}},{"source":"../../src/bin.ts","name":null,"original":{"line":123,"column":6},"generated":{"line":59,"column":15}},{"source":"../../src/bin.ts","name":null,"original":{"line":107,"column":2},"generated":{"line":60,"column":0}},{"source":"../../src/bin.ts","name":null,"original":{"line":125,"column":1},"generated":{"line":61,"column":0}}],"sources":{"../../src/bin.ts":"import {isBoolean, isObject} from 'vega-util';\nimport {BinParams} from './bin';\nimport {\n  Channel,\n  COLOR,\n  COLUMN,\n  FILL,\n  FILLOPACITY,\n  OPACITY,\n  ROW,\n  SHAPE,\n  SIZE,\n  STROKE,\n  STROKEOPACITY,\n  STROKEWIDTH\n} from './channel';\nimport {keys, varName} from './util';\n\nexport interface BaseBin {\n  /**\n   * The number base to use for automatic bin determination (default is base 10).\n   *\n   * __Default value:__ `10`\n   *\n   */\n  base?: number;\n  /**\n   * An exact step size to use between bins.\n   *\n   * __Note:__ If provided, options such as maxbins will be ignored.\n   */\n  step?: number;\n  /**\n   * An array of allowable step sizes to choose from.\n   * @minItems 1\n   */\n  steps?: number[];\n  /**\n   * A minimum allowable step size (particularly useful for integer values).\n   */\n  minstep?: number;\n  /**\n   * Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints.\n   *\n   * __Default value:__ `[5, 2]`\n   *\n   * @minItems 1\n   */\n  divide?: number[];\n  /**\n   * Maximum number of bins.\n   *\n   * __Default value:__ `6` for `row`, `column` and `shape` channels; `10` for other channels\n   *\n   * @minimum 2\n   */\n  maxbins?: number;\n  /**\n   * A value in the binned domain at which to anchor the bins, shifting the bin boundaries if necessary to ensure that a boundary aligns with the anchor value.\n   *\n   * __Default Value:__ the minimum bin extent value\n   */\n  anchor?: number;\n  /**\n   * If true (the default), attempts to make the bin boundaries use human-friendly boundaries, such as multiples of ten.\n   */\n  nice?: boolean;\n}\n\n/**\n * Binning properties or boolean flag for determining whether to bin data or not.\n */\nexport interface BinParams extends BaseBin {\n  /**\n   * A two-element (`[min, max]`) array indicating the range of desired bin values.\n   * @minItems 2\n   * @maxItems 2\n   */\n  extent?: number[]; // VgBinTransform uses a different extent so we need to pull this out.\n}\n\nexport function binToString(bin: BinParams | boolean) {\n  if (isBoolean(bin)) {\n    return 'bin';\n  }\n  return (\n    'bin' +\n    keys(bin)\n      .map(p => varName(`_${p}_${bin[p]}`))\n      .join('')\n  );\n}\n\nexport function isBinning(bin: BinParams | boolean | 'binned'): bin is BinParams | true {\n  return bin === true || isBinParams(bin);\n}\n\nexport function isBinned(bin: BinParams | boolean | 'binned'): bin is 'binned' {\n  return bin === 'binned';\n}\n\nexport function isBinParams(bin: BinParams | boolean | 'binned'): bin is BinParams {\n  return isObject(bin);\n}\n\nexport function autoMaxBins(channel: Channel): number {\n  switch (channel) {\n    case ROW:\n    case COLUMN:\n    case SIZE:\n    case COLOR:\n    case FILL:\n    case STROKE:\n    case STROKEWIDTH:\n    case OPACITY:\n    case FILLOPACITY:\n    case STROKEOPACITY:\n    // Facets and Size shouldn't have too many bins\n    // We choose 6 like shape to simplify the rule\n    case SHAPE:\n      return 6; // Vega's \"shape\" has 6 distinct values\n    default:\n      return 10;\n  }\n}\n"},"lineCount":null}},"hash":"03212d28013abfcd58b6e7bf812c3142","cacheData":{"env":{}}}